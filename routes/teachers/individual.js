// routes/timetableDownload.js
import express from "express";
import PDFDocument from "pdfkit";
import db from "../../middlewares/db.js";

const router = express.Router();

// Utility: Safe string
const safeString = (val) =>
  val === null || val === undefined ? "" : String(val).trim();

// Theme
const theme = {
  primary: "#16a34a",
  secondary: "#065f46",
  text: "#111827",
  headerBg: "#e5f9ee",
  border: "#16a34a",
  gray: "#9ca3af",
};

// Time slots
const TIME_SLOTS = [
  "04:30-05:15",
  "05:15-06:00",
  "06:00-06:45",
  "06:45-07:30",
  "07:30-08:15",
  "08:15-09:00",
];

router.get("/download/:teacherName", async (req, res) => {
  try {
    const teacherName = safeString(req.params.teacherName);
    if (!teacherName) return res.status(400).send("Teacher name required.");

    // Fetch teacher timetable
    const [rows] = await db.query(
      "SELECT * FROM teachers_timestable WHERE Teachers = ? ORDER BY Day",
      [teacherName]
    );
    if (!rows.length)
      return res.status(404).send("No timetable found for this teacher.");

    // Create landscape PDF
    const doc = new PDFDocument({
      margin: 40,
      size: "A4",
      layout: "landscape",
    });

    res.setHeader("Content-Type", "application/pdf");
    res.setHeader(
      "Content-Disposition",
      `attachment; filename="${teacherName}_timetable.pdf"`
    );
    doc.pipe(res);

    // Title
    doc.fontSize(24).fillColor(theme.primary).text("Teacher Timetable", {
      align: "center",
    });
    doc
      .moveDown(0.3)
      .fontSize(16)
      .fillColor(theme.secondary)
      .text(teacherName, { align: "center" });
    doc.moveDown(1.2);

    // Table setup
    const startX = 40;
    let y = doc.y;
    const cellHeight = 35;
    const dayColWidth = 100;
    const slotColWidth = 110;
    const totalWidth = dayColWidth + TIME_SLOTS.length * slotColWidth;

    // Save table top position (for vertical grid lines later)
    const tableTop = y;

    // Header background
    doc
      .rect(startX, y, totalWidth, cellHeight)
      .fill(theme.headerBg)
      .stroke();

    // Header text
    doc
      .fontSize(12)
      .fillColor(theme.text)
      .text("Day", startX + 5, y + 10, {
        width: dayColWidth - 10,
        align: "left",
      });

    TIME_SLOTS.forEach((slot, i) => {
      doc.text(slot, startX + dayColWidth + i * slotColWidth, y + 10, {
        width: slotColWidth,
        align: "center",
      });
    });

    // Header border
    doc
      .rect(startX, y, totalWidth, cellHeight)
      .strokeColor(theme.border)
      .lineWidth(1)
      .stroke();

    // Rows
    y += cellHeight;
    rows.forEach((row, rowIndex) => {
      // Zebra striping
      if (rowIndex % 2 === 0) {
        doc.rect(startX, y, totalWidth, cellHeight).fill("#f9fafb").stroke();
      }

      doc.fillColor(theme.secondary).fontSize(11);

      // Day cell
      doc.text(row.Day, startX + 5, y + 10, {
        width: dayColWidth - 10,
        align: "left",
      });

      // Time slots
      TIME_SLOTS.forEach((slot, i) => {
        const val = safeString(row[slot]) || "—";
        doc
          .fillColor(val === "—" ? theme.gray : theme.text)
          .text(val, startX + dayColWidth + i * slotColWidth, y + 10, {
            width: slotColWidth,
            align: "center",
          });
      });

      // Row border
      doc
        .rect(startX, y, totalWidth, cellHeight)
        .strokeColor(theme.border)
        .lineWidth(0.5)
        .stroke();

      y += cellHeight;

      // Page break
      if (y > 500) {
        doc.addPage({ size: "A4", layout: "landscape" });
        y = 50;
      }
    });

    // Draw vertical lines for full grid
    let colX = startX;
    doc.strokeColor(theme.border).lineWidth(0.5);
    doc.moveTo(colX, tableTop).lineTo(colX, y).stroke(); // left border

    colX += dayColWidth;
    TIME_SLOTS.forEach(() => {
      doc.moveTo(colX, tableTop).lineTo(colX, y).stroke();
      colX += slotColWidth;
    });

    // Right border
    doc.moveTo(startX + totalWidth, tableTop).lineTo(startX + totalWidth, y).stroke();

    // Footer
    doc.moveDown(2);
    doc
      .fontSize(10)
      .fillColor("#6b7280")
      .text("Generated by Manfess Timetable System © 2025", {
        align: "center",
      });

    // Close PDF correctly
    doc.end();
  } catch (err) {
    console.error("PDF generation error:", err);
    if (!res.headersSent) {
      res.status(500).send("Failed to generate timetable PDF.");
    }
  }
});

export default router;
